services:
  mqtt:
    image: eclipse-mosquitto:2.0
    container_name: mqtt
    ports:
      - "1883:1883" # Non-TLS port
      - "8883:8883" # TLS port
    volumes:
      - ./mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
      - ./ca.crt:/mosquitto/config/ca.crt:ro
      - ./mqtt.crt:/mosquitto/config/mqtt.crt:ro
      - ./mqtt.key:/mosquitto/config/mqtt.key:ro

  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v23.1.2
    container_name: redpanda
    command:
      - redpanda
      - start
      - --smp=1
      - --overprovisioned
      - --node-id=0
      # Kafka API (internal and external) on non-TLS listeners
      - --kafka-addr=INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9093
      - --advertise-kafka-addr=INTERNAL://redpanda:29092,EXTERNAL://localhost:9093
    ports:
      - "9093:9093"
    healthcheck:
      test: ["CMD-SHELL", "rpk cluster health"]
      interval: 10s
      timeout: 5s
      retries: 10

  gateway:
    build:
      context: .
      dockerfile: gateway/Dockerfile
    container_name: gateway
    ports:
      - "8000:8000"
    environment:
      - MQTT_BROKER=mqtt
      - MQTT_PORT=8883
      - MQTT_CAFILE=/app/certs/ca.crt
      - MQTT_TLS_INSECURE=true
      - KAFKA_BROKER=redpanda:29092
    depends_on:
      - mqtt
      - redpanda

  anomaly-detector:
    build:
      context: .
      dockerfile: anomaly_detector/Dockerfile
    container_name: anomaly-detector
    command: ["sh", "-c", "sleep 10 && python main.py"]
    environment:
      - KAFKA_BROKER=redpanda:29092
      - METRICS_PORT=9000
    depends_on:
      redpanda:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import sys, socket; s = socket.socket(socket.AF_INET, socket.SOCK_STREAM); s.connect(('redpanda', 29092)); s.close()\"" ]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 30s

  simulator:
    build:
      context: .
      dockerfile: simulator/Dockerfile
    container_name: simulator
    environment:
      - MQTT_BROKER=mqtt
      - MQTT_PORT=8883
      - MQTT_CAFILE=/app/certs/ca.crt
      - MQTT_TLS_INSECURE=true
    depends_on:
      - mqtt

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - gateway
      - anomaly-detector

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    volumes:
      - ./grafana-provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus

